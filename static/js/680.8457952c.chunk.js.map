{"version":3,"file":"static/js/680.8457952c.chunk.js","mappings":"uUAEMA,EAAU,mCACVC,EAAW,gCACJC,EAAY,kCAEZC,EAAa,mCAAG,8FACdC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oCAAiDD,IADnC,mFAAH,qDAIbK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,oBAC6BN,EAD7B,oBADiB,mFAAH,sDAMhBO,EAAgB,mCAAG,WAAMC,GAAN,iFACjBJ,EAAAA,EAAAA,IAAA,UACRH,EADQ,gCACwBD,EADxB,4DACmFQ,IAFlE,mFAAH,sDAMhBC,EAAS,mCAAG,WAAMH,GAAN,iFACVF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADU,mFAAH,sDAMTU,EAAY,mCAAG,WAAMJ,GAAN,iFACbF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADa,mFAAH,qD,oFCxBZW,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAChB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAAhD,SACGC,GAASC,KAFLF,EADO,GAOnB,C,iHCwBD,UAhCiB,WACf,OAA4BM,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAmB,mCAAG,8GAEK1B,EAAAA,EAAAA,MAFL,OAElB2B,EAFkB,OAIxBP,EAAUO,EAAeC,KAAKC,SAJN,gDAMxBP,EAAS,KAAMQ,SANS,yBAQxBN,GAAW,GARa,4EAAH,qDAWzBE,GACD,GAAE,KAGD,iCACE,2CACCH,IAAW,SAAC,IAAD,IACXF,IAAS,uBAAIA,KACd,wBAAKZ,EAAOsB,OAAS,IAAK,SAAC,IAAD,CAAYtB,OAAQA,QAGnD,C","sources":["components/FetchData.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '556357bfa8b76a1ca568b380d0c6c76a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrending = async () => {\n  return await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSingleMovie = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchSearchMovie = async search => {\n  return await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${search}`\n  );\n};\n\nexport const FetchCast = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchReviews = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return movies.map(({ id, title, name }) => (\n    <li key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title || name}\n      </Link>\n    </li>\n  ));\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { Spinner } from '../../components/Spinner';\nimport { FetchTrending } from '../../components/FetchData';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchTrendingMovies = async () => {\n      try {\n        const trendingMovies = await FetchTrending();\n\n        setMovies(trendingMovies.data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {loading && <Spinner />}\n      {error && <p>{error}</p>}\n      <ul>{movies.length > 0 && <MoviesList movies={movies} />}</ul>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_KEY","BASE_URL","IMAGE_URL","FetchTrending","axios","FetchSingleMovie","movie_id","FetchSearchMovie","search","FetchCast","FetchReviews","MoviesList","movies","location","useLocation","map","id","title","name","state","from","to","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchTrendingMovies","trendingMovies","data","results","message","length"],"sourceRoot":""}