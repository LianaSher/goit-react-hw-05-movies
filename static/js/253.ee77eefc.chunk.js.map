{"version":3,"file":"static/js/253.ee77eefc.chunk.js","mappings":"uUAEMA,EAAU,mCACVC,EAAW,gCACJC,EAAY,kCAEZC,EAAa,mCAAG,8FACdC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oCAAiDD,IADnC,mFAAH,qDAIbK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,oBAC6BN,EAD7B,oBADiB,mFAAH,sDAMhBO,EAAgB,mCAAG,WAAMC,GAAN,iFACjBJ,EAAAA,EAAAA,IAAA,UACRH,EADQ,gCACwBD,EADxB,4DACmFQ,IAFlE,mFAAH,sDAMhBC,EAAS,mCAAG,WAAMH,GAAN,iFACVF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADU,mFAAH,sDAMTU,EAAY,mCAAG,WAAMJ,GAAN,iFACbF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADa,mFAAH,qD,sFC1BZW,E,OAAOC,GAAAA,GAAH,2G,SCIJC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAChB,SAACT,EAAD,WACE,SAAC,KAAD,CAAMU,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,kBAAaL,GAAhD,SACGC,GAASC,KAFHF,EADK,GAOnB,C,sKCdYM,EAAcZ,EAAAA,GAAAA,MAAH,2MAYXa,EAAYb,EAAAA,GAAAA,OAAH,sR,SCTTc,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KAYA,OACE,kBAAMF,SAPa,SAAAG,GACnBA,EAAEC,iBACFJ,EAAS,CAAEnB,OAAAA,IACXqB,EAAU,GACX,EAGC,WACE,SAACL,EAAD,CACEQ,MAAOxB,EACPyB,SAdgB,SAAAH,GACpBD,EAAUC,EAAEI,OAAOF,MACpB,EAaKG,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZlB,KAAK,YAEP,SAACK,EAAD,uBAGL,E,SC9BYc,EAAkB3B,EAAAA,GAAAA,IAAH,gDCgD5B,EAvCqB,WACnB,OAAsCgB,EAAAA,EAAAA,UAAS,IAA/C,eAAOY,EAAP,KAAoBC,EAApB,KACA,GAA0Bb,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAA8Bf,EAAAA,EAAAA,WAAS,GAAvC,eAAOgB,EAAP,KAAgBC,EAAhB,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMxC,EAASuC,EAAaE,IAAI,UAuBhC,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAK1C,EAAL,CACAqC,GAAW,GACX,IAAMM,EAAe,mCAAG,8GAEa5C,EAAAA,EAAAA,IAAiBC,GAF9B,OAEd4C,EAFc,OAGpBX,EAAeW,EAAmBC,KAAKC,SAHnB,gDAKpBX,EAAS,KAAMY,SALK,yBAOpBV,GAAW,GAPS,4EAAH,qDAUrBM,GAZmB,CAapB,GAAE,CAAC3C,KAGF,UAAC+B,EAAD,YACE,SAACb,EAAD,CAAYC,SAvBC,SAAC,GAAgB,IAAdnB,EAAa,EAAbA,OAClBwC,EAAgB,CAAExC,OAAAA,IAClBiC,EAAe,GAChB,IAqBIG,IAAW,SAACY,EAAA,EAAD,IACXd,IAAS,uBAAIA,KACd,wBAAKF,EAAYiB,OAAS,IAAK,SAAC5C,EAAA,EAAD,CAAYC,OAAQ0B,QAGxD,C","sources":["components/FetchData.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.js","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '556357bfa8b76a1ca568b380d0c6c76a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrending = async () => {\n  return await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSingleMovie = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchSearchMovie = async search => {\n  return await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${search}`\n  );\n};\n\nexport const FetchCast = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchReviews = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  font-size: 20px;\n  font-weight: 400;\n  color: #212121;\n  margin-bottom: 7px;\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Item } from '../MoviesList/MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return movies.map(({ id, title, name }) => (\n    <Item key={id}>\n      <Link state={{ from: location }} to={`/movies/${id}`}>\n        {title || name}\n      </Link>\n    </Item>\n  ));\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n  height: 33px;\n  width: 250px;\n\n  margin-right: 10px;\n  font-size: 20px;\n  border: solid 1px #483d8b;\n  border-radius: 6px;\n  padding-left: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const SearchBtn = styled.button`\n  font-size: 20px;\n  font-weight: 600;\n  padding: 3.5px 10px;\n  color: #483d8b;\n  background-color: lightgray;\n  border: solid 1px #483d8b;\n  border-radius: 6px;\n  &:hover,\n  &:focus {\n    background-color: #483d8b;\n    color: lightgray;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { InputStyled, SearchBtn } from '../SearchForm/SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const onInputChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ search });\n    setSearch('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputStyled\n        value={search}\n        onChange={onInputChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movie\"\n        name=\"search\"\n      />\n      <SearchBtn>Search</SearchBtn>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  padding: 40px 120px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Spinner } from '../../components/Spinner';\n\nimport { FetchSearchMovie } from '../../components/FetchData';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\nimport { MoviesContainer } from '../Movies/Movies.styled';\n\nconst SearchMovies = () => {\n  const [moviesItems, setMoviesItems] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const onSubmit = ({ search }) => {\n    setSearchParams({ search });\n    setMoviesItems([]);\n  };\n\n  useEffect(() => {\n    if (!search) return;\n    setLoading(true);\n    const getSearchMovies = async () => {\n      try {\n        const searchMoviesResult = await FetchSearchMovie(search);\n        setMoviesItems(searchMoviesResult.data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getSearchMovies();\n  }, [search]);\n\n  return (\n    <MoviesContainer>\n      <SearchForm onSubmit={onSubmit} />\n      {loading && <Spinner />}\n      {error && <p>{error}</p>}\n      <ul>{moviesItems.length > 0 && <MoviesList movies={moviesItems} />}</ul>\n    </MoviesContainer>\n  );\n};\n\nexport default SearchMovies;\n"],"names":["API_KEY","BASE_URL","IMAGE_URL","FetchTrending","axios","FetchSingleMovie","movie_id","FetchSearchMovie","search","FetchCast","FetchReviews","Item","styled","MoviesList","movies","location","useLocation","map","id","title","name","state","from","to","InputStyled","SearchBtn","SearchForm","onSubmit","useState","setSearch","e","preventDefault","value","onChange","target","type","autoComplete","autoFocus","placeholder","MoviesContainer","moviesItems","setMoviesItems","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovies","searchMoviesResult","data","results","message","Spinner","length"],"sourceRoot":""}