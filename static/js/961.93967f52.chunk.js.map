{"version":3,"file":"static/js/961.93967f52.chunk.js","mappings":"uUAEMA,EAAU,mCACVC,EAAW,gCACJC,EAAY,kCAEZC,EAAa,mCAAG,8FACdC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,oCAAiDD,IADnC,mFAAH,qDAIbK,EAAgB,mCAAG,WAAMC,GAAN,iFACjBF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,oBAC6BN,EAD7B,oBADiB,mFAAH,sDAMhBO,EAAgB,mCAAG,WAAMC,GAAN,iFACjBJ,EAAAA,EAAAA,IAAA,UACRH,EADQ,gCACwBD,EADxB,4DACmFQ,IAFlE,mFAAH,sDAMhBC,EAAS,mCAAG,WAAMH,GAAN,iFACVF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADU,mFAAH,sDAMTU,EAAY,mCAAG,WAAMJ,GAAN,iFACbF,EAAAA,EAAAA,IAAA,UACRH,EADQ,iBACSK,EADT,4BACqCN,EADrC,oBADa,mFAAH,qD,0HCyDzB,UAzEqB,WACnB,OAAsCW,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACTC,EAASF,EAASG,MAAlBD,KAEFE,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACRT,GAAW,GACX,IAAMU,EAAgB,mCAAG,8GAEStB,EAAAA,EAAAA,IAAiBa,GAF1B,OAEfU,EAFe,OAGrBf,EAAee,EAAgBC,MAHV,gDAKrBd,EAAS,KAAMe,SALM,yBAOrBb,GAAW,GAPU,4EAAH,qDAUtBU,GACD,GAAE,CAACT,IAEJ,IAAQa,EAAuDnB,EAAvDmB,YAAaC,EAA0CpB,EAA1CoB,MAAOC,EAAmCrB,EAAnCqB,aAAcC,EAAqBtB,EAArBsB,SAAUC,EAAWvB,EAAXuB,OAEpD,OACE,gCACGnB,IAAW,yCACXF,IAAS,0CACTF,IAAgBE,IACf,4BACE,gBACEsB,IAAKL,EAAW,UAAM7B,EAAAA,IAAN,OAAkB6B,GAAlB,UAAqCM,GACrDC,IAAI,SACJC,MAAM,SAER,4BACE,wBAAKP,KACL,wCAAgBC,MAEhB,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,GAAM,UAAOA,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SACtD,mBAAQC,KAAK,SAASC,QAtCjB,kBAAMrB,EAASJ,EAASG,MAAMD,KAA9B,EAsCL,yBAIF,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAED,KAAAA,GAAQwB,GAAE,kBAAa5B,EAAb,SAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMK,MAAO,CAAED,KAAAA,GAAQwB,GAAE,kBAAa5B,EAAb,YAAzB,2BAKJ,SAAC,KAAD,SAKT,C","sources":["components/FetchData.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '556357bfa8b76a1ca568b380d0c6c76a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const FetchTrending = async () => {\n  return await axios.get(`${BASE_URL}trending/all/day?api_key=${API_KEY}`);\n};\n\nexport const FetchSingleMovie = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchSearchMovie = async search => {\n  return await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${search}`\n  );\n};\n\nexport const FetchCast = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n};\n\nexport const FetchReviews = async movie_id => {\n  return await axios.get(\n    `${BASE_URL}movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n};\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Link,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\n\nimport { FetchSingleMovie, IMAGE_URL } from '../../components/FetchData';\nimport noImage from '../../images/noImage.jpg';\n\nconst MovieDetails = () => {\n  const [singleMovie, setSingleMovie] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const { from } = location.state;\n\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(location.state.from);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchSingleMovie = async () => {\n      try {\n        const singleMovieData = await FetchSingleMovie(movieId);\n        setSingleMovie(singleMovieData.data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSingleMovie();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, genres } = singleMovie;\n\n  return (\n    <>\n      {loading && <p>...is loading</p>}\n      {error && <p>somthing wrong</p>}\n      {singleMovie && !error && (\n        <div>\n          <img\n            src={poster_path ? `${IMAGE_URL}${poster_path}` : `${noImage}`}\n            alt=\"poster\"\n            width=\"100\"\n          />\n          <div>\n            <h2>{title}</h2>\n            <p>User score: {vote_average}</p>\n\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres && `${genres.map(genre => genre.name).join(',')}`}</p>\n            <button type=\"button\" onClick={goBack}>\n              Go back\n            </button>\n          </div>\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link state={{ from }} to={`/movies/${movieId}/cast`}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link state={{ from }} to={`/movies/${movieId}/reviews`}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","BASE_URL","IMAGE_URL","FetchTrending","axios","FetchSingleMovie","movie_id","FetchSearchMovie","search","FetchCast","FetchReviews","useState","singleMovie","setSingleMovie","error","setError","loading","setLoading","movieId","useParams","location","useLocation","from","state","navigate","useNavigate","useEffect","fetchSingleMovie","singleMovieData","data","message","poster_path","title","vote_average","overview","genres","src","noImage","alt","width","map","genre","name","join","type","onClick","to"],"sourceRoot":""}